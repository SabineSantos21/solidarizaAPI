name: CI with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Necessário para análise de branches/pull requests

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Install Coverlet
      run: dotnet add Solidariza.Tests/Solidariza.Tests.csproj package coverlet.msbuild

    - name: Restore dependencies
      run: dotnet restore solidarizaAPI.sln

    - name: Begin SonarCloud analysis
      run: |
        dotnet sonarscanner begin \
          /k:"SabineSantos21_solidarizaAPI" \
          /o:"sabinesantos21" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.vscoveragexml.reportsPaths="**/TestResults/**/coverage.cobertura.xml,coverage/**/coverage.cobertura.xml" \
          /d:sonar.exclusions="**/obj/**,**/bin/**"

    - name: Build
      run: dotnet build solidarizaAPI.sln --configuration Release --no-restore

    - name: Run tests with coverage
      run: |
        dotnet test Solidariza.Tests/Solidariza.Tests.csproj \
          --no-restore \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=cobertura \
          /p:CoverletOutput=TestResults/coverage.cobertura.xml

    - name: End SonarCloud analysis
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"