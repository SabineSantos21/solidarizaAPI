name: CI with SonarCloud

on:
  push:
    branches:
      - master
      - develop
      - 'feature/**'
      - 'release/**'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Instalar .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Verificar vers찾o do .NET
        run: dotnet --version

      - name: Instalar SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: SonarCloud Begin
        run: |
          dotnet sonarscanner begin `
            /k:"SabineSantos21_solidarizaAPI" `
            /o:"sabinesantos21" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.cobertura.reportsPaths="coverage.cobertura.xml"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: dotnet restore
        run: dotnet restore

      - name: dotnet build
        run: dotnet build --no-restore

      - name: dotnet test com cobertura
        run: dotnet test --no-build --collect:"XPlat Code Coverage" --logger trx

      - name: Listar arquivos de cobertura
        shell: pwsh
        run: Get-ChildItem -Recurse -File | Where-Object {$_.Name -match "coverage.cobertura.xml"} | Select-Object FullName

      - name: Copiar cobertura para a raiz do projeto
        shell: pwsh
        run: |
          $report = Get-ChildItem -Recurse -Filter "coverage.cobertura.xml" | Select-Object -First 1
          Write-Host "Arquivo encontrado: $($report.FullName)"
          Copy-Item $report.FullName $env:GITHUB_WORKSPACE/coverage.cobertura.xml -Force

      - name: Listar arquivo na raiz ap처s c처pia
        shell: pwsh
        run: |
          if ((Test-Path "coverage.cobertura.xml")) {
            Get-Content "coverage.cobertura.xml" -First 15
          } else {
            Write-Host "Arquivo coverage.cobertura.xml n찾o encontrado na raiz!"
          }

      - name: SonarCloud End
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}