name: Deploy .NET Core App para Azure WebApp

on:
  push:
    branches:
      - master

jobs:
  sonarcloud-analyze:
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Melhor para análise do sonar

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"SabineSantos21_solidarizaAPI" /o:"sabinesantos21" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  build-and-deploy:
    needs: sonarcloud-analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Clean build outputs
        run: dotnet clean --runtime win-x86

      - name: Restore dependências
        run: dotnet restore --runtime win-x86

      - name: Build (win-x86)
        run: dotnet build ./Solidariza/Solidariza.csproj --configuration Release --runtime win-x86 --no-restore

      - name: Testes
        run: dotnet test ./Solidariza/Solidariza.csproj --configuration Release --runtime win-x86 --no-build --verbosity normal

      - name: Publish (self-contained para Windows 32 bits)
        run: dotnet publish ./Solidariza/Solidariza.csproj --configuration Release --self-contained true --runtime win-x86 --no-build --output ./publish

      - name: Verifique se DLL base está publicada
        run: find ./publish -name 'System.Private.CoreLib.dll' || true

      - name: Listar arquivos publicados
        run: ls -lh ./publish

      - name: Procurar DLLs base (corelib, threading, hostfxr)
        run: |
          find ./publish -name 'System.Private.CoreLib.dll'
          find ./publish -name 'System.Threading.dll'
          find ./publish -name 'hostfxr.dll'
          find ./publish -name 'hostpolicy.dll'

      - name: Deploy para Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'SolidarizaAPI'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./publish
          clean: true