name: CI/CD .NET Core App com cobertura no SonarCloud e Deploy Azure

on:
  push:
    branches:
      - master         # build, test, coverage, sonar, deploy
      - develop        # build, test, coverage, sonar
      - 'feature/**'   # build, test, coverage, sonar
      - 'release/**'   # build, test, coverage, sonar

jobs:
  build-test-sonar:
    runs-on: windows-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Instalar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Instalar SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Instalar dotnet-coverage
        run: dotnet tool install --global dotnet-coverage

      - name: Begin SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"SabineSantos21_solidarizaAPI" /o:"sabinesantos21" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml" /d:sonar.host.url="https://sonarcloud.io"

      - name: Build solution
        run: dotnet build --no-incremental

      - name: Testes com coverage
        run: dotnet-coverage collect "dotnet test --no-build" -f xml -o "coverage.xml"

      - name: End SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Publicar artefatos
        run: dotnet publish ./Solidariza/Solidariza.csproj --configuration Release --output ./publish

      - name: Listar arquivos publicados
        run: ls -lh ./publish

      - name: Upload artifact
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: publish
          path: ./publish

  deploy:
    needs: build-test-sonar
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Baixar artefatos publicados do job anterior
        uses: actions/download-artifact@v4
        with:
          name: publish
          path: ./publish

      - name: Limpar wwwroot via Kudu API
        env:
          PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        run: |
          user=$(echo "$PUBLISH_PROFILE" | grep -oP '(?<=userName=")[^"]+')
          pass=$(echo "$PUBLISH_PROFILE" | grep -oP '(?<=userPWD=")[^"]+')
          curl -i -u "$user:$pass" -X DELETE "https://solidarizaapi-cnbqcwduhta9bdbm.centralus-01.azurewebsites.net/api/vfs/site/wwwroot/"
          sleep 5

      - name: Deploy para Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'SolidarizaAPI'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./publish
          clean: true