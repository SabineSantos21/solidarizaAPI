name: Build and Analyze SolidarizaAPI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build, Test and Analyze
    runs-on: windows-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test Solidariza.Tests/Solidariza.Tests.csproj `
            --no-build `
            --configuration Release `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=cobertura `
            /p:CoverletOutput=../TestResults/coverage.xml `
            /logger:"trx;LogFileName=TestResults/results.trx"

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin `
            /k:"SabineSantos21_solidarizaAPI" `
            /o:"sabinesantos21" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.sources="Solidariza" `
            /d:sonar.tests="Solidariza.Tests" `
            /d:sonar.cs.xunit.reportsPaths=TestResults/results.trx `
            /d:sonar.cs.vscoveragexml.reportsPaths=TestResults/coverage.xml `
            /d:sonar.exclusions="**/bin/**,**/obj/**" `
            /d:sonar.coverage.exclusions="**/Program.cs,**/Startup.cs"

      - name: Rebuild solution for analysis
        run: dotnet build --no-restore --configuration Release

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
