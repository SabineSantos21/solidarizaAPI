name: CI with SonarCloud

on:
  push:
    branches:
      - master
      - develop
      - 'feature/**'
      - 'release/**'

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install Coverlet and ReportGenerator
        shell: powershell
        run: |
          dotnet tool install -g coverlet.console
          dotnet tool install -g dotnet-reportgenerator-globaltool
          echo "$env:USERPROFILE\.dotnet\tools" | Out-File -Append -Encoding utf8 $env:GITHUB_PATH

      - name: Run Tests and Generate Coverage Report
        shell: powershell
        run: |
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/coverage.cobertura.xml /p:UseSourceLink=true
          Start-Sleep -Seconds 5
          ~/.dotnet/tools/reportgenerator -reports:TestResults/coverage.cobertura.xml -targetdir:CoverageReports -reporttypes:"Cobertura"

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"SabineSantos21_solidarizaAPI" /o:"sabinesantos21" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportPaths="CoverageReports/coverage.cobertura.xml"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
